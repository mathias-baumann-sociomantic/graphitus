{
	"title":"SSP Stats",
		"width" : 640,
		"defaultLineWidth":1,
		"timeBack":"6h",
		"height" : 320,
		"refresh" : true,
		"legend" : false,
		"data":[
		{
			"title": "Bidding Requests/s (${continent}-${server}/${ssp})",
			"target" : [
				"aliasSub(aliasByNode(groupByNode(scale(timeShift(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.requests, \"45s\"),0.033333333),2,\"sumSeries\"),0),\"^.*-\", \"\")"
			]
		},
		{
			"title": "Bids/s (${continent}-${server}/${ssp})",
			"target" : [
				"aliasSub(aliasByNode(groupByNode(scale(timeShift(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.bids, \"45s\"),0.033333333),2,\"sumSeries\"),0),\"^.*-\", \"\")"
			]
		},
		{
			"title": "Bid %age (Bids to Bid Requests) (${continent}-${server}/${ssp})",
			"target" : [
				"asPercent(groupByNode( scale( timeShift(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.bids, \"45s\"), 0.033333333), 2, \"sumSeries\"), groupByNode( scale( timeShift(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.requests, \"45s\"), 0.033333333), 2, \"sumSeries\"))"
			]
		},
		{
			"title": "Wins/s (${continent}-${server}/${ssp})",
			"target" : [
				"aliasSub(aliasByNode(groupByNode(scale(timeShift(${reef_server}.reef.reef_ssp-${ssp}*.loglines, \"45s\"),0.033333333),2,\"sumSeries\"),0),\"^.*-\", \"\")"
			]
		},
		{
			"title": "Win %age (Wins to Bids) (${continent}-${server}/${ssp})",
			"target" : [
				"asPercent(groupByNode(scale(timeShift(${reef_server}.reef.reef_ssp-${ssp}*.loglines, \"45s\"),0.033333333),2,\"sumSeries\"), groupByNode(scale(timeShift(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.bids, \"45s\"),0.033333333),2,\"sumSeries\"))"
			]
		},
		{
			"title": "Propulsor FE Errors/s (%) (${continent}-${server}/${ssp})",
			"target" : [
				"asPercent(timeShift(groupByNode(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.errors, 2, \"sumSeries\"), \"45s\"), timeShift(groupByNode(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.requests, 2, \"sumSeries\"), \"45s\"))"
			]
		},
		{
			"title": "Propulsor FE User Match Errors/s (%) (${continent}-${server}/${ssp})",
			"target" : [
				"asPercent(timeShift(groupByNode(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.userid_errors, 2, \"sumSeries\"), \"45s\"), timeShift(groupByNode(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.requests, 2, \"sumSeries\"), \"45s\"))"
			]
		},
		{
			"title": "Propulsor FE Blocked Referrers/s (%) (${continent}-${server}/${ssp})",
			"target" : [
				"asPercent(timeShift(groupByNode(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.blocked_referrers, 2, \"sumSeries\"), \"45s\"), timeShift(groupByNode(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.requests, 2, \"sumSeries\"), \"45s\"))"
			]
		},
		{
			"title": "Propulsor FE AdSize Errors/s (%) (${continent}-${server}/${ssp})",
			"target" : [
				"asPercent(timeShift(groupByNode(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.adsize_errors, 2, \"sumSeries\"), \"45s\"), timeShift(groupByNode(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.requests, 2, \"sumSeries\"), \"45s\"))"
			]
		},
		{
			"title": "New Connections/s (${continent}-${server}/${ssp})",
			"target" : [
				"aliasSub(aliasByNode(groupByNode(timeShift(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.new_ssp_connections, \"45s\"),2,\"sumSeries\"),0),\"^.*-\", \"\")"
			]
		},
		{
			"title": "Total Connections (${continent}-${server}/${ssp})",
			"target" : [
				"aliasSub(aliasByNode(groupByNode(timeShift(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.ssp_connections, \"45s\"),2,\"sumSeries\"),0),\"^.*-\", \"\")"
			]
		},
		{
			"title": "Test Requests/s (${continent}-${server}/${ssp})",
			"target" : [
				"aliasSub(aliasByNode(groupByNode(scale(timeShift(${continent}-${server}.cacti_propulsor*.cacti_propulsor_fe_stats-${ssp}.tests, \"45s\"),0.033333333),2,\"sumSeries\"),0),\"^.*-\", \"\")"
			]
		},
		{
			"title": "User Matching Requests/s (${continent}-${server}/${ssp})",
			"target" : [
				"aliasSub(aliasByNode(groupByNode(scale(timeShift(${continent}-${server}.cacti_aqua*.cacti_aqua_ssp-${ssp}.total_processed, \"45s\"),0.033333333),2,\"sumSeries\"),0),\"^.*-\", \"\")"
			]
		},
		{
			"title": "Changes in Campaign Wins/s (${continent})",
			"target": [
				"aliasSub(aliasByNode(maximumAbove(stdev(${reef_server}.reef.reef_cid-*.loglines,10), 250),0,2),\".reef_cid-\", \" \")"
			],
			"params" : "hideLegend="
		},
		{
			"title": "Reef Logline Errors/s (${continent}/${ssp})",
			"target" : [
				"aliasSub(aliasByNode(groupByNode(scale(timeShift(${reef_server}.reef.reef_ssp-${ssp}*.errors, \"45s\"),0.033333333),2,\"sumSeries\"),0),\"^.*-\", \"\")"
			]
		},
		{
			"title": "CID Fails/s (${continent}/${ssp})",
			"target" : [
				"aliasSub(aliasByNode(groupByNode(scale(timeShift(${reef_server}.reef.reef_ssp-${ssp}*.failedcids, \"45s\"),0.033333333),2,\"sumSeries\"),0),\"^.*-\", \"\")"
			]
		}
	],
	"parameters": {
		"continent": {
			"All" : {
				"continent" : "*",
				"cont-nice" : "All",
				"reef_server" : "{eu-137,us-011,ap-010}"
			},
			"EU" : {
				"continent" : "eu",
				"cont-nice" : "EU",
				"reef_server" : "eu-137"
			},
			"US" : {
				"continent" : "us",
				"cont-nice" : "US",
				"reef_server" : "us-011"
			},
			"AP" : {
				"continent" : "ap",
				"cont-nice" : "AP",
				"reef_server" : "ap-010"
			},
			"USAP" : {
				"continent" : "usap",
				"cont-nice" : "USAP",
				"reef_server" : "ap-010"
			}
		},
		"server" : {
			"type" : "dynamic",
			"query" : "${continent}-*.cacti_propulsor-*",
			"index" : 0,
			"regex" : "-(.*)",
			"showAll": true,
			"defaultValue" : "*"
		},
		"ssp" : {
			"type" : "dynamic",
			"query" : "${continent}-${server}.cacti_propulsor-*.cacti_propulsor_fe_stats-*",
			"index" : 2,
			"regex" : "-(.+)",
			"showAll": true,
			"defaultValue" : "total"
		}
	}			
}
